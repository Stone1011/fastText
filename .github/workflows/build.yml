# .github/workflows/build_fasttext_py313_win64.yml
name: Build fastText for Python 3.13 Windows 64bit

on:
  workflow_dispatch: # 允许手动触发工作流

jobs:
  build_windows_py313:
    name: Build fastText on Windows (Python 3.13, 64-bit)
    runs-on: windows-latest # 指定使用最新的 Windows Runner

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 对于某些构建工具可能需要完整的 Git 历史

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # 这里设置一个基础 Python 版本，cibuildwheel 会安装 3.13

    - name: Install cibuildwheel
      run: pip install cibuildwheel==2.20.0 # 建议锁定版本

    - name: Build fastText wheels for Windows (Python 3.13)
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        # 只构建 Windows 平台
        CIBW_PLATFORM: windows
        # 只构建 Python 3.13 版本
        CIBW_BUILD: cp313-*

        # 确保只构建 64 位架构
        CIBW_ARCHS_WINDOWS: AMD64

        # fastText 需要 MSVC C++ 编译工具。windows-latest Runner 默认包含这些。
        # 如果你遇到 C++ 编译错误，可能需要确保 CIBW_BEFORE_BUILD 安装了必要的编译器。
        # 但对于 MSVC，一般不需要额外安装，通常由 cibuildwheel 自动处理。

        # fastText 在构建时可能需要 cython，我们可以在 CIBW_BEFORE_BUILD 中添加
        CIBW_BEFORE_BUILD: pip install cython

        # 如果 fastText 有安装包级别的测试，可以在这里运行
        # CIBW_TEST_REQUIRES: pytest
        # CIBW_TEST_COMMAND: pytest {project_path}/python/tests # 假设fastText测试文件在 python/tests 目录下

    - name: Upload Windows Python 3.13 wheels
      uses: actions/upload-artifact@v4
      with:
        name: fasttext-wheels-windows-py313
        path: wheelhouse/*.whl


